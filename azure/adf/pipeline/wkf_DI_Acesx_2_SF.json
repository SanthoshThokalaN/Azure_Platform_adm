{
	"name": "wkf_DI_Acesx_2_SF",
	"properties": {
		"activities": [
			{
				"name": "Get_Object_Metadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeV2Source",
						"query": {
							"value": "@concat('select\nAPP_SOURCE,  \nAPP_SOURCE_TYPE,\nAPP_HOST,\nAPP_PORT,\nAPP_SERVICE_NAME,\nAPP_USER_NAME,\nAPP_AKV_SECRET_NAME ,\nAPP_COLUMN_LIST,\nAPP_SCHEMA,\nAPP_OBJECT_NAME,\nOBJECT_NAME,\n \n \nCASE WHEN INCR_INDC = ''Y'' THEN ''WHERE ''||INCR_COLUMN||'' BETWEEN  TO_TIMESTAMP(''''''||EXTRACT_DT_PREV||''''''  , ''''YYYY-MM-DD HH24:MI:SSFF9'''')  - INTERVAL ''''''||ETL_EXTRACT_CAP_MINS||'''''' MINUTE AND TO_TIMESTAMP(''''''||EXTRACT_DT||'''''', ''''YYYY-MM-DD HH24:MI:SSFF9'''') ''\n \nELSE '' '' END AS WHERE_CLAUSE\n \n \n \n \n \nFROM ', pipeline().parameters.p_util_schema, '.ETL_BATCH_OBJECT_CONTROL  WHERE\nAPPLICATION = ''', pipeline().parameters.p_application, '''\n AND WORKFLOW_NAME = ''',pipeline().parameters.p_workflow_name, ''' AND OBJECT_NAME = ''', pipeline().parameters.p_object_name, '''')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "ds_sf_v2_isdc",
						"type": "DatasetReference",
						"parameters": {
							"par_sf_v2_acct": {
								"value": "@pipeline().globalParameters.par_sf_v2_acct",
								"type": "Expression"
							},
							"par_sf_v2_db": {
								"value": "@pipeline().globalParameters.par_sf_v2_db",
								"type": "Expression"
							},
							"par_sf_v2_user": {
								"value": "@pipeline().globalParameters.par_sf_v2_user",
								"type": "Expression"
							},
							"par_sf_v2_wh": {
								"value": "@pipeline().globalParameters.par_sf_v2_wh",
								"type": "Expression"
							},
							"par_sf_v2_role": {
								"value": "@pipeline().globalParameters.par_sf_v2_role",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Stage_Oracle_Data_to_Blob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get_Object_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Batch_Id",
						"value": "@pipeline().parameters.p_batch_id"
					},
					{
						"name": "Object_Name",
						"value": "@pipeline().parameters.p_object_name"
					}
				],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": {
							"value": "@concat('SELECT ', activity('Get_Object_Metadata').output.firstRow.APP_COLUMN_LIST, ' FROM ', activity('Get_Object_Metadata').output.firstRow.APP_SCHEMA, '.', activity('Get_Object_Metadata').output.firstRow.APP_OBJECT_NAME, ' ', activity('Get_Object_Metadata').output.firstRow.WHERE_CLAUSE, ' FETCH FIRST 200000 ROWS ONLY ')",
							"type": "Expression"
						},
						"partitionOption": "None",
						"convertDecimalToInteger": false,
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings",
							"maxRowsPerFile": 100000,
							"fileNamePrefix": {
								"value": "@toLower(activity('Get_Object_Metadata').output.firstRow.OBJECT_NAME)",
								"type": "Expression"
							}
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_oracle_generic",
						"type": "DatasetReference",
						"parameters": {
							"p_host": {
								"value": "@activity('Get_Object_Metadata').output.firstRow.APP_HOST",
								"type": "Expression"
							},
							"p_port": {
								"value": "@activity('Get_Object_Metadata').output.firstRow.APP_PORT",
								"type": "Expression"
							},
							"p_service_name": {
								"value": "@activity('Get_Object_Metadata').output.firstRow.APP_SERVICE_NAME",
								"type": "Expression"
							},
							"p_user_name": {
								"value": "@activity('Get_Object_Metadata').output.firstRow.APP_USER_NAME",
								"type": "Expression"
							},
							"p_secret_name": {
								"value": "@activity('Get_Object_Metadata').output.firstRow.APP_AKV_SECRET_NAME",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_ablob_data_ingestion",
						"type": "DatasetReference",
						"parameters": {
							"p_source_name": {
								"value": "@toLower(activity('Get_Object_Metadata').output.firstRow.APP_SOURCE)",
								"type": "Expression"
							},
							"p_schema_name": {
								"value": "@toLower(activity('Get_Object_Metadata').output.firstRow.APP_SCHEMA)",
								"type": "Expression"
							},
							"p_table_name": {
								"value": "@toLower(activity('Get_Object_Metadata').output.firstRow.OBJECT_NAME)",
								"type": "Expression"
							},
							"p_env": {
								"value": "@pipeline().globalParameters.par_env",
								"type": "Expression"
							},
							"p_hotstore_endpoint": {
								"value": "@pipeline().globalParameters.par_blob_hotstore_endpoint",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP_DI_ACESX_2_SF",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Stage_Oracle_Data_to_Blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sf_v2_isdc",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_sf_v2_acct": {
							"value": "@pipeline().globalParameters.par_sf_v2_acct",
							"type": "Expression"
						},
						"par_sf_v2_user": {
							"value": "@pipeline().globalParameters.par_sf_v2_user",
							"type": "Expression"
						},
						"par_sf_v2_db": {
							"value": "@pipeline().globalParameters.par_sf_v2_db",
							"type": "Expression"
						},
						"par_sf_v2_wh": {
							"value": "@pipeline().globalParameters.par_sf_v2_wh",
							"type": "Expression"
						},
						"par_sf_v2_role": {
							"value": "@pipeline().globalParameters.par_sf_v2_role",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "@concat(\n'CALL ',\npipeline().parameters.p_proc_schema, '.', \n'SP_DI_ACESX_2_SF',\n\n'(',   \n\n'''',pipeline().parameters.p_db_name, '''' , ',',\n'''',pipeline().parameters.p_util_schema, '''' , ',', \n'''',pipeline().parameters.p_application, '''' , ',',\n'''',pipeline().parameters.p_workflow_name, '''' , ',',\n'''',pipeline().parameters.p_object_name, '''',\n\n')'\n\n\n)\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Log_Copy_Failure",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Stage_Oracle_Data_to_Blob",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sf_v2_isdc",
					"type": "LinkedServiceReference",
					"parameters": {
						"par_sf_v2_acct": {
							"value": "@pipeline().globalParameters.par_sf_v2_acct",
							"type": "Expression"
						},
						"par_sf_v2_user": {
							"value": "@pipeline().globalParameters.par_sf_v2_user",
							"type": "Expression"
						},
						"par_sf_v2_db": {
							"value": "@pipeline().globalParameters.par_sf_v2_db",
							"type": "Expression"
						},
						"par_sf_v2_wh": {
							"value": "@pipeline().globalParameters.par_sf_v2_wh",
							"type": "Expression"
						},
						"par_sf_v2_role": {
							"value": "@pipeline().globalParameters.par_sf_v2_role",
							"type": "Expression"
						}
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "@concat(\n'CALL ',\npipeline().parameters.p_util_schema, '.', \n'SP_BATCH_OBJECT_COPY_DATA_POST_FAILURE',\n\n'(',   \n\n'''',pipeline().parameters.p_db_name, '''' , ',',\n'''',pipeline().parameters.p_util_schema, '''' , ',', \n'''',pipeline().parameters.p_application, '''' , ',',\n'''',pipeline().parameters.p_workflow_name, '''' , ',',\n'''',pipeline().parameters.p_object_name, '''', ',',\n'''',replace(string(activity('Stage_Oracle_Data_to_Blob').error?.message), '''', ''), '''',\n\n')'\n\n\n)",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"p_application": {
				"type": "string"
			},
			"p_workflow_name": {
				"type": "string"
			},
			"p_object_name": {
				"type": "string"
			},
			"p_batch_id": {
				"type": "string"
			},
			"p_util_schema": {
				"type": "string"
			},
			"p_db_name": {
				"type": "string"
			},
			"p_proc_schema": {
				"type": "string"
			}
		},
		"folder": {
			"name": "DATA_INGESTION/ACESX"
		},
		"annotations": []
	}
}