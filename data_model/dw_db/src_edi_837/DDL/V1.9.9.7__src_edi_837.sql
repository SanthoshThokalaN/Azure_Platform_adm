USE SCHEMA SRC_EDI_837;

CREATE OR REPLACE PROCEDURE SP_LEGACY_PROF_CLAIM_CLMNBR("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "TRAN_MTH" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "SRC_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "WH" VARCHAR(16777216), "STAGE" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE



V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROCESS_NAME   VARCHAR DEFAULT ''LEGACY_LOAD'';

V_SUB_PROCESS_NAME  VARCHAR DEFAULT  ''LEGACY_PROF_CLAIM_CLMNBR'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_LAST_QUERY_ID    VARCHAR;

V_STAGE VARCHAR := :STAGE||''/transactset_create_date=''||:TRAN_MTH;

V_QUERY1 VARCHAR;

V_QUERY2 VARCHAR;

V_TEMP_TBL  VARCHAR :=  :SRC_SC||''.''||''TMP_PROF_CLAIM_CLMNBR_RAW''||''_''||:TRAN_MTH;

V_LZ_TBL    VARCHAR :=  :SRC_SC||''.''||''PROF_CLAIM_CLMNBR_RAW'';

V_SRC_TBL   VARCHAR :=  :TGT_SC||''.''||''PROF_CLAIM_CLMNBR'';
 

BEGIN

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;

ALTER SESSION SET TIMEZONE = ''America/Chicago'';

V_STEP := ''STEP1'';



V_STEP_NAME := ''PROF_CLAIM_CLMNBR''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());


V_QUERY1 := ''CREATE OR REPLACE TEMPORARY TABLE ''||:V_TEMP_TBL||'' AS (SELECT * EXCLUDE (ISDC_CREATED_DT, ISDC_UPDATED_DT) FROM ''||V_LZ_TBL||'' WHERE 1 = 2); '';  
 
V_QUERY2 := '' 

COPY INTO ''||:V_TEMP_TBL||'' FROM  (
select 
$1 
,$2 
,$3 
,$4 
,$5 
,$6 
,$7 
,$8 
,$9 
,$10 
,$11 
,$12 
,$13 
,$14 
,$15 
,$16 
,$17 
,$18 
,$19 
,$20 
,$21 
,$22 
,$23 
,$24 
,$25 
,$26 
,$27 
,COALESCE($28, ''''-99999999999999999999'''') 
,COALESCE($29, ''''-99999999999999999999'''') 
,$30 
,COALESCE($31, ''''99999999999999999999'''') 
,$32
,COALESCE($33, ''''-99999999999999999999'''') 
,$34 
,COALESCE($35, ''''-99999999999999999999'''') 
,$36 
,$37 
,$38 
,$39 
,$40 
,$41 
,$42 
,$43 
,$44 
,$45 
,$46
,$47 
,$48
,$49 
,$50 
,$51 
,$52 
,split($53,'''''''') 
,$54
,split($55,'''''''')
,$56
,$57
,$58
,$59
,$60
,$61
,metadata$filename
from ''||:V_STAGE||'' ) file_format = ''''UTIL.FF_TILDA_CSV'''', pattern=''''.*transactset_create_date=.*.000.*'''' ;''

;

execute immediate ''USE SCHEMA ''||:TGT_SC; 
execute immediate :V_QUERY1;  
execute immediate :V_QUERY2; 


INSERT INTO LZ_EDI_837.PROF_CLAIM_CLMNBR_ERROR
SELECT  	
    UCPS_CLM_NUM ,
	UCPS_CLM_DT ,
	CLM_TYPE ,
	REF_ID_QLFR ,
	REF_ID_VALUE ,
	MEMBER_ID ,
	CREAT_DT ,
	APP_SENDER_CODE ,
	APP_RECIEVER_CODE ,
	GRP_CONTROL_NO ,
	TRANCACTSET_CNTL_NO ,
	IMPL_CONVENTION_REFER ,
	TRANSACTSET_PURPOSE_CODE ,
	BATCH_CNTL_NO ,
	TRANSACTSET_CREATE_TIME ,
	TRANSACT_TYPE_CODE ,
	PROVIDER_HL_NO ,
	SUBSCRIBER_HL_NO ,
	PAYER_HL_NO ,
	CLAIM_ID ,
	TOTAL_CLAIM_CHARGE_AMT ,
	HEALTHCARESERVICE_LOCATION ,
	PROVIDER_ACCEPT_ASSIGN_CODE ,
	PROVIDER_BENEFIT_AUTH_CODE ,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE ,
	DELAY_REASON_CODE ,
	HEALTH_CARE_CODE_INFO ,
    
  CASE WHEN sv_reimbursement_rate = ''-99999999999999999999'' THEN NULL ELSE sv_reimbursement_rate END,
  CASE WHEN sv_hcpcs_payable_amt = ''-99999999999999999999'' THEN NULL ELSE sv_hcpcs_payable_amt END,
  sv_clm_payment_remark_code, 
  CASE WHEN  sl_seq_num = ''99999999999999999999'' THEN NULL ELSE sl_seq_num END ,
  product_service_id_qlfr ,
  CASE WHEN line_item_charge_amt = ''-99999999999999999999'' THEN NULL ELSE line_item_charge_amt END,
  measurement_unit, 
  CASE WHEN  service_unit_count = ''-99999999999999999999'' THEN NULL ELSE service_unit_count END , 
    

	DATE_TIME_QLFY ,
	DATE_TIME_FRMT_QLFY ,
	SERVICE_DATE ,
	CAS_ADJ_GROUP_CODE ,
	CAS_ADJ_REASON_CODE ,
	CAS_ADJ_AMT ,
	VENDOR_CD ,
	PROVIDER_SIGN_INDICATOR ,
	PAT_SIGNATURE_CD ,
	RELATED_CAUSE_CODE_INFO ,
	SPECIAL_PROGRAM_INDICATOR ,
	PATIENT_AMT_PAID ,
	SERVICE_AUTH_EXCEPTION_CODE ,
	CLINICAL_LAB_AMENDMENT_NUM ,
	NETWORK_TRACE_NUMBER ,
	MEDICAL_RECORD_NUMBER ,
	DEMONSTRATION_PROJECT_ID ,
	HEALTH_CARE_ADDITIONAL_CODE_INFO ,
	ANESTHESIA_PROCEDURE_CODE ,
	HC_CONDITION_CODES ,
	PAYER_CLM_CTRL_NUM ,
	NON_COVERED_CHARGE_AMT ,
	DIAGNOSIS_CODE_POINTERS ,
	EMERGENCY_INDICATOR ,
	FAMILY_PLANNING_INDICATOR ,
	EPSDT_INDICATOR ,
	TRANSACTSET_CREATE_DATE
    
    FROM IDENTIFIER(:V_TEMP_TBL)

WHERE 
(
   (SV_REIMBURSEMENT_RATE   NOT regexp ''-?[0-9]+(\.[0-9]+)'' )  OR
   (SV_HCPCS_PAYABLE_AMT   NOT regexp ''-?[0-9]+(\.[0-9]+)'' )  OR
   (SL_SEQ_NUM   NOT regexp ''[0-9]+'')  OR
   (LINE_ITEM_CHARGE_AMT   NOT regexp ''-?[0-9]+(\.[0-9]+)'' )  OR
   (SERVICE_UNIT_COUNT   NOT regexp ''-?[0-9]+(\.[0-9]+)'' )  
)
;

INSERT INTO IDENTIFIER(:V_SRC_TBL)
(
 	UCPS_CLM_NUM ,
	UCPS_CLM_DT ,
	CLM_TYPE ,
	REF_ID_QLFR ,
	REF_ID_VALUE ,
	MEMBER_ID ,
	CREAT_DT ,
	APP_SENDER_CODE ,
	APP_RECIEVER_CODE ,
	GRP_CONTROL_NO ,
	TRANCACTSET_CNTL_NO ,
	IMPL_CONVENTION_REFER ,
	TRANSACTSET_PURPOSE_CODE ,
	BATCH_CNTL_NO ,
	TRANSACTSET_CREATE_TIME ,
	TRANSACT_TYPE_CODE ,
	PROVIDER_HL_NO ,
	SUBSCRIBER_HL_NO ,
	PAYER_HL_NO ,
	CLAIM_ID ,
	TOTAL_CLAIM_CHARGE_AMT ,
	HEALTHCARESERVICE_LOCATION ,
	PROVIDER_ACCEPT_ASSIGN_CODE ,
	PROVIDER_BENEFIT_AUTH_CODE ,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE ,
	DELAY_REASON_CODE ,
	HEALTH_CARE_CODE_INFO ,
	SV_REIMBURSEMENT_RATE ,
	SV_HCPCS_PAYABLE_AMT ,
	SV_CLM_PAYMENT_REMARK_CODE ,
	SL_SEQ_NUM ,
	PRODUCT_SERVICE_ID_QLFR ,
	LINE_ITEM_CHARGE_AMT ,
	MEASUREMENT_UNIT ,
	SERVICE_UNIT_COUNT ,
	DATE_TIME_QLFY ,
	DATE_TIME_FRMT_QLFY ,
	SERVICE_DATE ,
	CAS_ADJ_GROUP_CODE ,
	CAS_ADJ_REASON_CODE ,
	CAS_ADJ_AMT ,
	VENDOR_CD ,
	PROVIDER_SIGN_INDICATOR ,
	PAT_SIGNATURE_CD ,
	RELATED_CAUSE_CODE_INFO ,
	SPECIAL_PROGRAM_INDICATOR ,
	PATIENT_AMT_PAID ,
	SERVICE_AUTH_EXCEPTION_CODE ,
	CLINICAL_LAB_AMENDMENT_NUM ,
	NETWORK_TRACE_NUMBER ,
	MEDICAL_RECORD_NUMBER ,
	DEMONSTRATION_PROJECT_ID ,
	HEALTH_CARE_ADDITIONAL_CODE_INFO ,
	ANESTHESIA_PROCEDURE_CODE ,
	HC_CONDITION_CODES ,
	PAYER_CLM_CTRL_NUM ,
	NON_COVERED_CHARGE_AMT ,
	DIAGNOSIS_CODE_POINTERS ,
	EMERGENCY_INDICATOR ,
	FAMILY_PLANNING_INDICATOR ,
	EPSDT_INDICATOR ,
	TRANSACTSET_CREATE_DATE ,
  ISDC_CREATED_DT,
  ISDC_UPDATED_DT
)
 
SELECT DISTINCT   
   	UCPS_CLM_NUM ,
	UCPS_CLM_DT ,
	CLM_TYPE ,
	REF_ID_QLFR ,
	REF_ID_VALUE ,
	MEMBER_ID ,
	CREAT_DT ,
	APP_SENDER_CODE ,
	APP_RECIEVER_CODE ,
	GRP_CONTROL_NO ,
	TRANCACTSET_CNTL_NO ,
	IMPL_CONVENTION_REFER ,
	TRANSACTSET_PURPOSE_CODE ,
	BATCH_CNTL_NO ,
	TRANSACTSET_CREATE_TIME ,
	TRANSACT_TYPE_CODE ,
	PROVIDER_HL_NO ,
	SUBSCRIBER_HL_NO ,
	PAYER_HL_NO ,
	CLAIM_ID ,
	TOTAL_CLAIM_CHARGE_AMT ,
	HEALTHCARESERVICE_LOCATION ,
	PROVIDER_ACCEPT_ASSIGN_CODE ,
	PROVIDER_BENEFIT_AUTH_CODE ,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE ,
	DELAY_REASON_CODE ,
	HEALTH_CARE_CODE_INFO ,
  CASE WHEN sv_reimbursement_rate = ''-99999999999999999999'' THEN NULL ELSE sv_reimbursement_rate END,
  CASE WHEN sv_hcpcs_payable_amt = ''-99999999999999999999'' THEN NULL ELSE sv_hcpcs_payable_amt END,
  sv_clm_payment_remark_code, 
  CASE WHEN  sl_seq_num = ''99999999999999999999'' THEN NULL ELSE sl_seq_num END ,
  product_service_id_qlfr ,
  CASE WHEN line_item_charge_amt = ''-99999999999999999999'' THEN NULL ELSE line_item_charge_amt END,
  measurement_unit, 
  CASE WHEN  service_unit_count = ''-99999999999999999999'' THEN NULL ELSE service_unit_count END , 
	DATE_TIME_QLFY ,
	DATE_TIME_FRMT_QLFY ,
	SERVICE_DATE ,
	CAS_ADJ_GROUP_CODE ,
	CAS_ADJ_REASON_CODE ,
	CAS_ADJ_AMT ,
	VENDOR_CD ,
	PROVIDER_SIGN_INDICATOR ,
	PAT_SIGNATURE_CD ,
	RELATED_CAUSE_CODE_INFO ,
	SPECIAL_PROGRAM_INDICATOR ,
	PATIENT_AMT_PAID ,
	SERVICE_AUTH_EXCEPTION_CODE ,
	CLINICAL_LAB_AMENDMENT_NUM ,
	NETWORK_TRACE_NUMBER ,
	MEDICAL_RECORD_NUMBER ,
	DEMONSTRATION_PROJECT_ID ,
	HEALTH_CARE_ADDITIONAL_CODE_INFO ,
	ANESTHESIA_PROCEDURE_CODE ,
	HC_CONDITION_CODES ,
	PAYER_CLM_CTRL_NUM ,
	NON_COVERED_CHARGE_AMT ,
	DIAGNOSIS_CODE_POINTERS ,
	EMERGENCY_INDICATOR ,
	FAMILY_PLANNING_INDICATOR ,
	EPSDT_INDICATOR ,
  SUBSTR(transactset_create_date, REGEXP_INSTR(transactset_create_date, ''transactset_create_date='')+24, 8) AS transactset_create_date ,
CURRENT_TIMESTAMP, 
CURRENT_TIMESTAMP

FROM IDENTIFIER(:V_TEMP_TBL)

WHERE 
(
   (SV_REIMBURSEMENT_RATE   regexp ''-?[0-9]+(\.[0-9]+)'' )  AND
   (SV_HCPCS_PAYABLE_AMT   regexp ''-?[0-9]+(\.[0-9]+)'' )  AND
   (SL_SEQ_NUM   regexp ''[0-9]+'')  AND
   (LINE_ITEM_CHARGE_AMT   regexp ''-?[0-9]+(\.[0-9]+)'' )  AND
   (SERVICE_UNIT_COUNT   regexp ''-?[0-9]+(\.[0-9]+)'' )  

)

;


V_ROWS_LOADED := SQLROWCOUNT ;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, :TRAN_MTH, NULL, NULL);


UPDATE UTIL.LEGACY_LOAD SET LOAD_INDC = ''Y'' WHERE TABLE_NAME = :V_SUB_PROCESS_NAME AND TRAN_MTH = :TRAN_MTH;

EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';
