USE SCHEMA SRC_EDI_837;

CREATE OR REPLACE PROCEDURE SP_837_CROSSWALK_EXTRACT("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "SRC_FOX_SC" VARCHAR(16777216), "WH" VARCHAR(16777216), "STAGE_NAME" VARCHAR(16777216), "CURR_DATE" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

V_CURRENT_DATE   DATE := COALESCE(TO_DATE(:CURR_DATE), CURRENT_DATE());

V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROCESS_NAME   VARCHAR DEFAULT ''837_CROSSWALK_EXTRACT'';

V_SUB_PROCESS_NAME  VARCHAR DEFAULT ''837_CROSSWALK_EXTRACT'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_MESSAGE          VARCHAR;

V_LAST_QUERY_ID    VARCHAR;

V_TMP_837_CROSSWALK   VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.TMP_837_CROSSWALK'';  

V_CH_VIEW             VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_FOX_SC,''SRC_FOX_SC'') || ''.CH_VIEW''; 


V_STAGE_QUERY  VARCHAR;

BEGIN

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;

ALTER SESSION SET TIMEZONE = ''America/Chicago'';

V_STEP := ''STEP1'';
   
V_STEP_NAME := ''Load TMP_837_CROSSWALK''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());

create or replace temporary table  IDENTIFIER(:V_TMP_837_CROSSWALK) AS 


SELECT 

CLM_NUM as "ucps_clm_num",
CLH_TRK_ID as "clh_trk_id" ,
MEDICARE_CLM_CNTRL_NUM as "medicare_clm_cntrl_num",
CLM_TYPE as "clm_type",
MEMBER_ID as "member_id",
CLM_RECEPT_DT as "clm_recept_dt"
FROM IDENTIFIER(:V_CH_VIEW)
WHERE CLM_RECEPT_DT BETWEEN TO_VARCHAR(DATEADD(MONTH, -1, :V_CURRENT_DATE)::date,''YYYY-MM-01'')
AND TO_VARCHAR(LAST_DAY(DATEADD(MONTH, -1, :V_CURRENT_DATE))::date,''YYYY-MM-DD'')
;


V_ROWS_LOADED := (select count(1) from IDENTIFIER(:V_TMP_837_CROSSWALK)) ;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
  
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);
                                 
V_STEP := ''STEP2'';
   
 
V_STEP_NAME := ''Generate File for 837 Crosswalk''; 

V_MESSAGE   :=  ''File Generated Successfully'';
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());                                 

V_STAGE_QUERY := ''COPY INTO ''||:STAGE_NAME||''/pre_clm/outbox/837_crosswalk_extract/''||''crosswalk_837_''||(select TO_VARCHAR(DATEADD(MONTH, -1, :V_CURRENT_DATE)::date,''YYYYMM''))||''.txt''||'' FROM (
             SELECT *
               FROM TMP_837_CROSSWALK
               )
file_format = (type = ''''CSV'''' 
               field_delimiter = ''''|''''
               compression = None 
               null_if = (''''null'''', ''''\\N'''')
              )
HEADER = True
OVERWRITE = True
MAX_FILE_SIZE = 4900000000
SINGLE = True''

;

execute immediate ''USE SCHEMA ''||:TGT_SC;                                  
execute immediate  :V_STAGE_QUERY;  


V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
  
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, NULL, NULL, :V_MESSAGE, NULL, NULL);

EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';
