USE SCHEMA SRC_EDI_837;

CREATE OR REPLACE PROCEDURE SP_TESTBED_SNOWPARK_LOAD("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "WH" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE
V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR        := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';
V_PROCESS_NAME             VARCHAR        default ''TESTBED PROCESS'';
V_SUB_PROCESS_NAME         VARCHAR        default ''TESTBED CLAIM GENERATION'';
V_STEP                     VARCHAR;
V_STEP_NAME                VARCHAR;
V_START_TIME               VARCHAR;
V_END_TIME                 VARCHAR;
V_ROWS_PARSED              INTEGER; 
V_ROWS_LOADED              INTEGER; 
V_MESSAGE                  VARCHAR;
V_LAST_QUERY_ID            VARCHAR; 
V_STAGE_QUERY              VARCHAR;
V_PYTHON_DEMO              VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.PYTHON_DEMO'';
 
BEGIN
EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;
ALTER SESSION SET TIMEZONE = ''America/Chicago'';
V_STEP := ''STEP1'';
V_STEP_NAME := ''Load PYTHON_DEMO''; 
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());
copy into IDENTIFIER(:V_PYTHON_DEMO)
from
    (
        select
            regexp_replace($1, ''
?|
'', '''') as value
        from
            @UTIL.STAGE_AZURE_ISDC/pre_clm/inbox/testbed_preprocess/filter/cms
    ) file_format = ''src_edi_837.ff_testbed837'';
V_ROWS_LOADED := (select count(1) from IDENTIFIER(:V_PYTHON_DEMO));
V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1));
 
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'',  :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);
V_STEP := ''STEP2'';
V_STEP_NAME := ''Splitting Files from PYTHON_DEMO''; 
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());
copy into @UTIL.STAGE_AZURE_ISDC/pre_clm/inbox/testbed_preprocess/split/cms from (
select concat(VALUE, ''~'') from IDENTIFIER(:V_PYTHON_DEMO)
)
file_format = (type = ''CSV''
               record_delimiter = none
               field_delimiter=None
               compression = None
              )
HEADER = FALSE
OVERWRITE = TRUE
MAX_FILE_SIZE = 15000000
SINGLE = FALSE
;
V_ROWS_LOADED := (select count(1) from IDENTIFIER(:V_PYTHON_DEMO));
V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1));
 
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'',  :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);
V_STEP := ''STEP3'';
 
V_STEP_NAME := ''Run TESTBED PYSPARK PROCESS'';
V_MESSAGE   :=  ''File Generated Successfully'';
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());  
V_STAGE_QUERY :=  ''call SRC_EDI_837.SP_TESTBED()'';
execute immediate ''USE SCHEMA ''||:TGT_SC;                          
execute immediate :V_STAGE_QUERY;  
V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1));
 
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'',  :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, NULL, NULL, :V_MESSAGE, NULL, NULL);
 
EXCEPTION
WHEN OTHER THEN
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'',  :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);
RAISE;
END;
';
