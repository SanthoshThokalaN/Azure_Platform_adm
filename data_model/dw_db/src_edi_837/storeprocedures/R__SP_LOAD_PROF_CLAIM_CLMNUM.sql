USE SCHEMA SRC_EDI_837;

CREATE OR REPLACE PROCEDURE "SP_LOAD_PROF_CLAIM_CLMNUM"("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "SRC_EDI_837_SC" VARCHAR(16777216), "SRC_FOX_SC" VARCHAR(16777216), "WH" VARCHAR(16777216), "STAGE_NAME" VARCHAR(16777216), "CURR_DATE" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

V_CURRENT_DATE   DATE := COALESCE(TO_DATE(:CURR_DATE), CURRENT_DATE());

V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROCESS_NAME   VARCHAR DEFAULT ''837_CLAIM_NUMBER_PROVISIONING'';

V_SUB_PROCESS_NAME  VARCHAR DEFAULT  ''LOAD_PROF_CLAIM_CLMNUM'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_MESSAGE          VARCHAR;

V_LAST_QUERY_ID    VARCHAR;

V_STAGE_QUERY      VARCHAR;

V_TMP_PROF_CLAIM_CLMNBR   VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.TMP_PROF_CLAIM_CLMNBR'';
V_PROF_CLAIM_CLMNBR       VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.PROF_CLAIM_CLMNBR'';
V_TMP_PROF_CLAIM_CLMNBR_REPORT   VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.TMP_PROF_CLAIM_CLMNBR_REPORT'';
V_PROF_CLAIM_PART            VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_EDI_837_SC,''SRC_EDI_837'') || ''.PROF_CLAIM_PART'';
V_PROF_SUBSCRIBER            VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_EDI_837_SC,''SRC_EDI_837'') || ''.PROF_SUBSCRIBER'';
V_CH_VIEW                    VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_FOX_SC,''SRC_FOX'') || ''.CH_VIEW'';
V_CLM_RECEPT_DATE  VARCHAR;
V_TRANSACTSET_START_DATE VARCHAR;
V_TRANSACTSET_END_DATE VARCHAR;

BEGIN

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;

ALTER SESSION SET TIMEZONE = ''America/Chicago'';
V_CLM_RECEPT_DATE := (select TO_VARCHAR(DATEADD(DAY,-7,:V_CURRENT_DATE)::DATE,''YYYY-MM-DD''));

V_TRANSACTSET_START_DATE := (select TO_VARCHAR(DATEADD(DAY,-21,:V_CURRENT_DATE)::DATE,''YYYYMMDD''));
V_TRANSACTSET_END_DATE := (select TO_VARCHAR(DATEADD(DAY, 5, :V_CURRENT_DATE)::DATE,''YYYYMMDD''));




V_STEP := ''STEP1'';
 
 
V_STEP_NAME := ''Load TMP_PROF_CLAIM_CLMNBR''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());


CREATE OR REPLACE TEMPORARY TABLE  IDENTIFIER(:V_TMP_PROF_CLAIM_CLMNBR) AS

SELECT
    DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
    DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
    DB2.CLM_TYPE,
    ''F8'' AS REF_ID_QLFR,
    DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
    DB2.MEMBER_ID,
    '''' AS CREAT_DT,
    CLM.APP_SENDER_CODE,
    CLM.APP_RECIEVER_CODE,
    CLM.GRP_CONTROL_NO,
    CLM.TRANCACTSET_CNTL_NO,
    CLM.IMPL_CONVENTION_REFER,
    CLM.TRANSACTSET_PURPOSE_CODE,
    CLM.BATCH_CNTL_NO,
    CLM.TRANSACTSET_CREATE_TIME,
    CLM.TRANSACT_TYPE_CODE,
    CLM.PROVIDER_HL_NO,
    CLM.SUBSCRIBER_HL_NO,
    CLM.PAYER_HL_NO,
    CLM.CLAIM_ID,
    TOTAL_CLAIM_CHARGE_AMT,
    HEALTHCARESERVICE_LOCATION,
    PROVIDER_ACCEPT_ASSIGN_CODE,
    PROVIDER_BENEFIT_AUTH_CODE,
    PROVIDER_PATINFO_RELEASE_AUTH_CODE,
    DELAY_REASON_CODE,
    HEALTH_CARE_CODE_INFO,
    SV_REIMBURSEMENT_RATE,
    SV_HCPCS_PAYABLE_AMT,
    SV_CLM_PAYMENT_REMARK_CODE,
    SL_SEQ_NUM,
    PRODUCT_SERVICE_ID_QLFR,
    LINE_ITEM_CHARGE_AMT,
    MEASUREMENT_UNIT,
    SERVICE_UNIT_COUNT,
    DATE_TIME_QLFY,
    DATE_TIME_FRMT_QLFY,
    SERVICE_DATE,
    CAS_ADJ_GROUP_CODE,
    CAS_ADJ_REASON_CODE,
    CAS_ADJ_AMT,
    VENDOR_CD,
    PROVIDER_SIGN_INDICATOR,
    PAT_SIGNATURE_CD,
    RELATED_CAUSE_CODE_INFO,
    SPECIAL_PROGRAM_INDICATOR,
    PATIENT_AMT_PAID,
    SERVICE_AUTH_EXCEPTION_CODE,
    CLINICAL_LAB_AMENDMENT_NUM,
    NETWORK_TRACE_NUMBER,
    MEDICAL_RECORD_NUMBER,
    DEMONSTRATION_PROJECT_ID,
    HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    HC_CONDITION_CODES,
    PAYER_CLM_CTRL_NUM,
    NON_COVERED_CHARGE_AMT,
    DIAGNOSIS_CODE_POINTERS,
    EMERGENCY_INDICATOR,
    FAMILY_PLANNING_INDICATOR,
    EPSDT_INDICATOR,
    CLM.TRANSACTSET_CREATE_DATE
FROM
    identifier(:V_PROF_CLAIM_PART) CLM
    LEFT JOIN identifier(:V_PROF_SUBSCRIBER) MEM ON (
        MEM.GRP_CONTROL_NO = CLM.GRP_CONTROL_NO
        AND MEM.TRANCACTSET_CNTL_NO = CLM.TRANCACTSET_CNTL_NO
        AND MEM.SUBSCRIBER_HL_NO = CLM.SUBSCRIBER_HL_NO
        AND MEM.TRANSACTSET_CREATE_DATE = CLM.TRANSACTSET_CREATE_DATE
		AND CLM.XML_MD5 = MEM.XML_MD5
    )
    INNER JOIN identifier(:V_CH_VIEW) DB2 ON (
        DB2.MEDICARE_CLM_CNTRL_NUM = CLM.PAYER_CLM_CTRL_NUM
        AND DB2.MEMBER_ID = MEM.SUBSCRIBER_ID
        AND date_part(
            YEAR,
            COALESCE(
                TRY_TO_DATE(DB2.CLM_RECEPT_DT),
                DATE(''1970-01-01'')
            )
        ) = DATE_PART(YEAR,TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD'')))
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
			AND DB2.MEDICARE_CLM_CNTRL_NUM IS NOT NULL
			AND CLM.VENDOR_CD = ''CMS''
		    AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
			UNION
SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''D9'' AS REF_ID_QLFR,
	DB2.CLH_TRK_ID AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
	identifier(:V_PROF_CLAIM_PART) CLM
	INNER JOIN identifier(:V_CH_VIEW) DB2 ON (
		DB2.CLH_TRK_ID = CLM.NETWORK_TRACE_NUMBER
		AND date_part(
			YEAR,
			COALESCE(
				TRY_TO_DATE(DB2.CLM_RECEPT_DT),
				DATE(''1970-01-01'')
			)
		) = DATE_PART(YEAR,TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD'')))
		WHERE
			DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
					AND DB2.CLH_TRK_ID IS NOT NULL
					AND CLM.VENDOR_CD = ''CH''
					AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''F8'' AS REF_ID_QLFR,
	DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
	HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
identifier(:V_PROF_CLAIM_PART) CLM
JOIN identifier(:V_CH_VIEW) DB2 ON (
	LPAD(SUBSTR(DB2.CLM_NUM, 1, 11), 11, ''0'') = TRIM(SUBSTR(CLM.CLM_BILLING_NOTE_TEXT, 2, 12))
	AND (CLM.APP_SENDER_CODE = ''EXELA'')
	AND (
		DB2.DOC_CTL_NBR IS NULL
		OR DB2.DOC_CTL_NBR LIKE ''NULL''
	)
)
WHERE
DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
	AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
					
UNION

SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''F8'' AS REF_ID_QLFR,
	DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	HEALTH_CARE_ADDITIONAL_CODE_INFO,
	ANESTHESIA_PROCEDURE_CODE,
	HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
	identifier(:V_PROF_CLAIM_PART) CLM
	JOIN identifier(:V_CH_VIEW) DB2 ON (
		DB2.DOC_CTL_NBR = TRIM(
			SUBSTR(SPLIT(CLM.CLM_BILLING_NOTE_TEXT, '' '') [1], 3, 12)
		)
		AND (CLM.APP_SENDER_CODE = ''EXELA'')
		AND (
			DB2.DOC_CTL_NBR NOT LIKE ''NULL''
			AND DB2.DOC_CTL_NBR IS NOT NULL
		)
	)
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
	AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE;
					
					
					  
V_ROWS_LOADED := SQLROWCOUNT;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);
					



V_STEP := ''STEP2'';
 
 
V_STEP_NAME := ''Load TMP_PROF_CLAIM_CLMNBR_REPORT''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());

   
CREATE OR REPLACE TEMPORARY TABLE  IDENTIFIER(:V_TMP_PROF_CLAIM_CLMNBR_REPORT) AS

SELECT
    DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
    DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
    DB2.CLM_TYPE,
    ''F8'' AS REF_ID_QLFR,
    DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
    DB2.MEMBER_ID,
    '''' AS CREAT_DT,
    CLM.APP_SENDER_CODE,
    CLM.APP_RECIEVER_CODE,
    CLM.GRP_CONTROL_NO,
    CLM.TRANCACTSET_CNTL_NO,
    CLM.IMPL_CONVENTION_REFER,
    CLM.TRANSACTSET_PURPOSE_CODE,
    CLM.BATCH_CNTL_NO,
    CLM.TRANSACTSET_CREATE_TIME,
    CLM.TRANSACT_TYPE_CODE,
    CLM.PROVIDER_HL_NO,
    CLM.SUBSCRIBER_HL_NO,
    CLM.PAYER_HL_NO,
    CLM.CLAIM_ID,
    TOTAL_CLAIM_CHARGE_AMT,
    HEALTHCARESERVICE_LOCATION,
    PROVIDER_ACCEPT_ASSIGN_CODE,
    PROVIDER_BENEFIT_AUTH_CODE,
    PROVIDER_PATINFO_RELEASE_AUTH_CODE,
    DELAY_REASON_CODE,
    HEALTH_CARE_CODE_INFO,
    SV_REIMBURSEMENT_RATE,
    SV_HCPCS_PAYABLE_AMT,
    SV_CLM_PAYMENT_REMARK_CODE,
    SL_SEQ_NUM,
    PRODUCT_SERVICE_ID_QLFR,
    LINE_ITEM_CHARGE_AMT,
    MEASUREMENT_UNIT,
    SERVICE_UNIT_COUNT,
    DATE_TIME_QLFY,
    DATE_TIME_FRMT_QLFY,
    SERVICE_DATE,
    CAS_ADJ_GROUP_CODE,
    CAS_ADJ_REASON_CODE,
    CAS_ADJ_AMT,
    VENDOR_CD,
    PROVIDER_SIGN_INDICATOR,
    PAT_SIGNATURE_CD,
    RELATED_CAUSE_CODE_INFO,
    SPECIAL_PROGRAM_INDICATOR,
    PATIENT_AMT_PAID,
    SERVICE_AUTH_EXCEPTION_CODE,
    CLINICAL_LAB_AMENDMENT_NUM,
    NETWORK_TRACE_NUMBER,
    MEDICAL_RECORD_NUMBER,
    DEMONSTRATION_PROJECT_ID,
    ARRAY_TO_STRING(HEALTH_CARE_ADDITIONAL_CODE_INFO,'''') as HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
    PAYER_CLM_CTRL_NUM,
    NON_COVERED_CHARGE_AMT,
    DIAGNOSIS_CODE_POINTERS,
    EMERGENCY_INDICATOR,
    FAMILY_PLANNING_INDICATOR,
    EPSDT_INDICATOR,
    CLM.TRANSACTSET_CREATE_DATE
FROM
    identifier(:V_PROF_CLAIM_PART) CLM
    LEFT JOIN identifier(:V_PROF_SUBSCRIBER) MEM ON (
        MEM.GRP_CONTROL_NO = CLM.GRP_CONTROL_NO
        AND MEM.TRANCACTSET_CNTL_NO = CLM.TRANCACTSET_CNTL_NO
        AND MEM.SUBSCRIBER_HL_NO = CLM.SUBSCRIBER_HL_NO
        AND MEM.TRANSACTSET_CREATE_DATE = CLM.TRANSACTSET_CREATE_DATE
		AND CLM.XML_MD5 = MEM.XML_MD5
    )
    INNER JOIN identifier(:V_CH_VIEW) DB2 ON (
        DB2.MEDICARE_CLM_CNTRL_NUM = CLM.PAYER_CLM_CTRL_NUM
        AND DB2.MEMBER_ID = MEM.SUBSCRIBER_ID
        AND date_part(
            YEAR,
            COALESCE(
                TRY_TO_DATE(DB2.CLM_RECEPT_DT),
                DATE(''1970-01-01'')
            )
        ) = DATE_PART(YEAR,TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD'')))
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
			AND DB2.MEDICARE_CLM_CNTRL_NUM IS NOT NULL
			AND CLM.VENDOR_CD = ''CMS''
		    AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
			UNION
SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''D9'' AS REF_ID_QLFR,
	DB2.CLH_TRK_ID AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	ARRAY_TO_STRING(HEALTH_CARE_ADDITIONAL_CODE_INFO,'''') as HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
	identifier(:V_PROF_CLAIM_PART) CLM
	INNER JOIN identifier(:V_CH_VIEW) DB2 ON (
		DB2.CLH_TRK_ID = CLM.NETWORK_TRACE_NUMBER
		AND date_part(
			YEAR,
			COALESCE(
				TRY_TO_DATE(DB2.CLM_RECEPT_DT),
				DATE(''1970-01-01'')
			)
		) = DATE_PART(YEAR,TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD'')))
		WHERE
			DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
					AND DB2.CLH_TRK_ID IS NOT NULL
					AND CLM.VENDOR_CD = ''CH''
					AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''F8'' AS REF_ID_QLFR,
	DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	ARRAY_TO_STRING(HEALTH_CARE_ADDITIONAL_CODE_INFO,'''') as HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
identifier(:V_PROF_CLAIM_PART) CLM
JOIN identifier(:V_CH_VIEW) DB2 ON (
	LPAD(SUBSTR(DB2.CLM_NUM, 1, 11), 11, ''0'') = TRIM(SUBSTR(CLM.CLM_BILLING_NOTE_TEXT, 2, 12))
	AND (CLM.APP_SENDER_CODE = ''EXELA'')
	AND (
		DB2.DOC_CTL_NBR IS NULL
		OR DB2.DOC_CTL_NBR LIKE ''NULL''
	)
)
WHERE
DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
	AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
					
UNION

SELECT
	DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
	DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
	DB2.CLM_TYPE,
	''F8'' AS REF_ID_QLFR,
	DB2.MEDICARE_CLM_CNTRL_NUM AS REF_ID_VALUE,
	DB2.MEMBER_ID,
	'''' AS CREAT_DT,
	CLM.APP_SENDER_CODE,
	CLM.APP_RECIEVER_CODE,
	CLM.GRP_CONTROL_NO,
	CLM.TRANCACTSET_CNTL_NO,
	CLM.IMPL_CONVENTION_REFER,
	CLM.TRANSACTSET_PURPOSE_CODE,
	CLM.BATCH_CNTL_NO,
	CLM.TRANSACTSET_CREATE_TIME,
	CLM.TRANSACT_TYPE_CODE,
	CLM.PROVIDER_HL_NO,
	CLM.SUBSCRIBER_HL_NO,
	CLM.PAYER_HL_NO,
	CLM.CLAIM_ID,
	TOTAL_CLAIM_CHARGE_AMT,
	HEALTHCARESERVICE_LOCATION,
	PROVIDER_ACCEPT_ASSIGN_CODE,
	PROVIDER_BENEFIT_AUTH_CODE,
	PROVIDER_PATINFO_RELEASE_AUTH_CODE,
	DELAY_REASON_CODE,
	HEALTH_CARE_CODE_INFO,
	SV_REIMBURSEMENT_RATE,
	SV_HCPCS_PAYABLE_AMT,
	SV_CLM_PAYMENT_REMARK_CODE,
	SL_SEQ_NUM,
	PRODUCT_SERVICE_ID_QLFR,
	LINE_ITEM_CHARGE_AMT,
	MEASUREMENT_UNIT,
	SERVICE_UNIT_COUNT,
	DATE_TIME_QLFY,
	DATE_TIME_FRMT_QLFY,
	SERVICE_DATE,
	CAS_ADJ_GROUP_CODE,
	CAS_ADJ_REASON_CODE,
	CAS_ADJ_AMT,
	VENDOR_CD,
	PROVIDER_SIGN_INDICATOR,
	PAT_SIGNATURE_CD,
	RELATED_CAUSE_CODE_INFO,
	SPECIAL_PROGRAM_INDICATOR,
	PATIENT_AMT_PAID,
	SERVICE_AUTH_EXCEPTION_CODE,
	CLINICAL_LAB_AMENDMENT_NUM,
	NETWORK_TRACE_NUMBER,
	MEDICAL_RECORD_NUMBER,
	DEMONSTRATION_PROJECT_ID,
	ARRAY_TO_STRING(HEALTH_CARE_ADDITIONAL_CODE_INFO,'''') as HEALTH_CARE_ADDITIONAL_CODE_INFO,
    ANESTHESIA_PROCEDURE_CODE,
    ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
	PAYER_CLM_CTRL_NUM,
	NON_COVERED_CHARGE_AMT,
	DIAGNOSIS_CODE_POINTERS,
	EMERGENCY_INDICATOR,
	FAMILY_PLANNING_INDICATOR,
	EPSDT_INDICATOR,
	CLM.TRANSACTSET_CREATE_DATE
FROM
	identifier(:V_PROF_CLAIM_PART) CLM
	JOIN identifier(:V_CH_VIEW) DB2 ON (
		DB2.DOC_CTL_NBR = TRIM(
			SUBSTR(SPLIT(CLM.CLM_BILLING_NOTE_TEXT, '' '') [1], 3, 12)
		)
		AND (CLM.APP_SENDER_CODE = ''EXELA'')
		AND (
			DB2.DOC_CTL_NBR NOT LIKE ''NULL''
			AND DB2.DOC_CTL_NBR IS NOT NULL
		)
	)
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
	AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE;

                                                                                    
 INSERT INTO IDENTIFIER(:V_PROF_CLAIM_CLMNBR)
(
  UCPS_CLM_NUM , 
  UCPS_CLM_DT , 
  CLM_TYPE , 
  REF_ID_QLFR , 
  REF_ID_VALUE , 
  MEMBER_ID , 
  CREAT_DT , 
  APP_SENDER_CODE , 
  APP_RECIEVER_CODE , 
  GRP_CONTROL_NO , 
  TRANCACTSET_CNTL_NO , 
  IMPL_CONVENTION_REFER , 
  TRANSACTSET_PURPOSE_CODE , 
  BATCH_CNTL_NO , 
  TRANSACTSET_CREATE_TIME , 
  TRANSACT_TYPE_CODE , 
  PROVIDER_HL_NO , 
  SUBSCRIBER_HL_NO , 
  PAYER_HL_NO , 
  CLAIM_ID , 
  TOTAL_CLAIM_CHARGE_AMT , 
  HEALTHCARESERVICE_LOCATION , 
  PROVIDER_ACCEPT_ASSIGN_CODE , 
  PROVIDER_BENEFIT_AUTH_CODE , 
  PROVIDER_PATINFO_RELEASE_AUTH_CODE , 
  DELAY_REASON_CODE , 
  HEALTH_CARE_CODE_INFO , 
  SV_REIMBURSEMENT_RATE , 
  SV_HCPCS_PAYABLE_AMT , 
  SV_CLM_PAYMENT_REMARK_CODE , 
  SL_SEQ_NUM , 
  PRODUCT_SERVICE_ID_QLFR , 
  LINE_ITEM_CHARGE_AMT , 
  MEASUREMENT_UNIT , 
  SERVICE_UNIT_COUNT , 
  DATE_TIME_QLFY , 
  DATE_TIME_FRMT_QLFY , 
  SERVICE_DATE , 
  CAS_ADJ_GROUP_CODE , 
  CAS_ADJ_REASON_CODE , 
  CAS_ADJ_AMT , 
  VENDOR_CD , 
  PROVIDER_SIGN_INDICATOR , 
  PAT_SIGNATURE_CD , 
  RELATED_CAUSE_CODE_INFO , 
  SPECIAL_PROGRAM_INDICATOR , 
  PATIENT_AMT_PAID , 
  SERVICE_AUTH_EXCEPTION_CODE , 
  CLINICAL_LAB_AMENDMENT_NUM , 
  NETWORK_TRACE_NUMBER , 
  MEDICAL_RECORD_NUMBER , 
  DEMONSTRATION_PROJECT_ID , 
  HEALTH_CARE_ADDITIONAL_CODE_INFO , 
  ANESTHESIA_PROCEDURE_CODE , 
  HC_CONDITION_CODES , 
  PAYER_CLM_CTRL_NUM , 
  NON_COVERED_CHARGE_AMT , 
  DIAGNOSIS_CODE_POINTERS , 
  EMERGENCY_INDICATOR , 
  FAMILY_PLANNING_INDICATOR , 
  EPSDT_INDICATOR ,
  TRANSACTSET_CREATE_DATE 
	)                                                                                   
SELECT
DISTINCT   UCPS_CLM_NUM , 
  UCPS_CLM_DT , 
  CLM_TYPE , 
  REF_ID_QLFR , 
  REF_ID_VALUE , 
  MEMBER_ID , 
  CREAT_DT , 
  APP_SENDER_CODE , 
  APP_RECIEVER_CODE , 
  GRP_CONTROL_NO , 
  TRANCACTSET_CNTL_NO , 
  IMPL_CONVENTION_REFER , 
  TRANSACTSET_PURPOSE_CODE , 
  BATCH_CNTL_NO , 
  TRANSACTSET_CREATE_TIME , 
  TRANSACT_TYPE_CODE , 
  PROVIDER_HL_NO , 
  SUBSCRIBER_HL_NO , 
  PAYER_HL_NO , 
  CLAIM_ID , 
  TOTAL_CLAIM_CHARGE_AMT , 
  HEALTHCARESERVICE_LOCATION , 
  PROVIDER_ACCEPT_ASSIGN_CODE , 
  PROVIDER_BENEFIT_AUTH_CODE , 
  PROVIDER_PATINFO_RELEASE_AUTH_CODE , 
  DELAY_REASON_CODE , 
  HEALTH_CARE_CODE_INFO , 
  SV_REIMBURSEMENT_RATE , 
  SV_HCPCS_PAYABLE_AMT , 
  SV_CLM_PAYMENT_REMARK_CODE , 
  SL_SEQ_NUM , 
  PRODUCT_SERVICE_ID_QLFR , 
  LINE_ITEM_CHARGE_AMT , 
  MEASUREMENT_UNIT , 
  SERVICE_UNIT_COUNT , 
  DATE_TIME_QLFY , 
  DATE_TIME_FRMT_QLFY , 
  SERVICE_DATE , 
  CAS_ADJ_GROUP_CODE , 
  CAS_ADJ_REASON_CODE , 
  CAS_ADJ_AMT , 
  VENDOR_CD , 
  PROVIDER_SIGN_INDICATOR , 
  PAT_SIGNATURE_CD , 
  RELATED_CAUSE_CODE_INFO , 
  SPECIAL_PROGRAM_INDICATOR , 
  PATIENT_AMT_PAID , 
  SERVICE_AUTH_EXCEPTION_CODE , 
  CLINICAL_LAB_AMENDMENT_NUM , 
  NETWORK_TRACE_NUMBER , 
  MEDICAL_RECORD_NUMBER , 
  DEMONSTRATION_PROJECT_ID , 
  HEALTH_CARE_ADDITIONAL_CODE_INFO , 
  ANESTHESIA_PROCEDURE_CODE , 
  HC_CONDITION_CODES , 
  PAYER_CLM_CTRL_NUM , 
  NON_COVERED_CHARGE_AMT , 
  DIAGNOSIS_CODE_POINTERS , 
  EMERGENCY_INDICATOR , 
  FAMILY_PLANNING_INDICATOR , 
  EPSDT_INDICATOR ,
  TRANSACTSET_CREATE_DATE 
FROM
	IDENTIFIER(:V_TMP_PROF_CLAIM_CLMNBR)
WHERE
	CLM_TYPE = ''P'';
  
V_ROWS_LOADED := SQLROWCOUNT;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);

  
V_STEP := ''STEP3'';

 
V_STEP_NAME := ''Generate File for Wrong clmtype''; 

V_MESSAGE   :=  ''File Generated Successfully'';
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());                                 

V_STAGE_QUERY := ''COPY INTO ''||:STAGE_NAME||''/pre_clm/outbox/837_claim_number_provisioning/''||''prof_i_clmtype_''||(select TO_VARCHAR(:V_CURRENT_DATE,''YYYYMMDD''))||''.txt''||'' FROM (

SELECT DISTINCT *
FROM TMP_PROF_CLAIM_CLMNBR_REPORT WHERE CLM_TYPE IN (''''I'''','''' '''')
               )
file_format = (type = ''''CSV'''' 
               field_delimiter = ''''~''''
               empty_field_as_null=false
			   NULL_IF = ('''''''',''''NULL'''', ''''Null'''',''''null'''')
               compression = None                         
               )
               
               
               
HEADER = False
OVERWRITE = True
MAX_FILE_SIZE = 4900000000
SINGLE = True''

;                                 

execute immediate ''USE SCHEMA ''||:TGT_SC;                          
execute immediate :V_STAGE_QUERY;  


V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
  
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, NULL, NULL, :V_MESSAGE, NULL, NULL);                                      
                                 

EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';