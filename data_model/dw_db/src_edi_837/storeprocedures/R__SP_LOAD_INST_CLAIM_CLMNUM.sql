USE SCHEMA SRC_EDI_837;

CREATE OR REPLACE PROCEDURE "SP_LOAD_INST_CLAIM_CLMNUM"("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "SRC_EDI_837_SC" VARCHAR(16777216), "SRC_FOX_SC" VARCHAR(16777216), "WH" VARCHAR(16777216), "STAGE_NAME" VARCHAR(16777216), "CURR_DATE" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

V_CURRENT_DATE   DATE := COALESCE(TO_DATE(:CURR_DATE), CURRENT_DATE());

V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROCESS_NAME   VARCHAR DEFAULT ''837_CLAIM_NUMBER_PROVISIONING'';

V_SUB_PROCESS_NAME  VARCHAR DEFAULT  ''LOAD_INST_CLAIM_CLMNUM'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_MESSAGE          VARCHAR;
V_CLM_RECEPT_DATE  VARCHAR;
V_LAST_QUERY_ID    VARCHAR;
V_TRANSACTSET_START_DATE VARCHAR;
V_TRANSACTSET_END_DATE VARCHAR;

V_STAGE_QUERY      VARCHAR;

V_TMP_INST_CLAIM_CLMNBR   VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.TMP_INST_CLAIM_CLMNBR'';
V_INST_CLAIM_CLMNBR       VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.INST_CLAIM_CLMNBR'';
V_TMP_INST_CLAIM_CLMNBR_REPORT   VARCHAR     := :DB_NAME || ''.'' || COALESCE(:TGT_SC,''SRC_EDI_837'') || ''.TMP_INST_CLAIM_CLMNBR_REPORT'';
V_INST_CLAIM_PART            VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_EDI_837_SC,''SRC_EDI_837'') || ''.INST_CLAIM_PART'';
V_CH_VIEW                    VARCHAR     := :DB_NAME || ''.'' || COALESCE(:SRC_FOX_SC,''SRC_FOX'') || ''.CH_VIEW'';


BEGIN

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;

ALTER SESSION SET TIMEZONE = ''America/Chicago'';
V_CLM_RECEPT_DATE := (select TO_VARCHAR(DATEADD(DAY,-7,:V_CURRENT_DATE)::DATE,''YYYY-MM-DD''));

V_TRANSACTSET_START_DATE := (select TO_VARCHAR(DATEADD(DAY,-21,:V_CURRENT_DATE)::DATE,''YYYYMMDD''));
V_TRANSACTSET_END_DATE := (select TO_VARCHAR(DATEADD(DAY, 5, :V_CURRENT_DATE)::DATE,''YYYYMMDD''));

V_STEP := ''STEP1'';
 
 
V_STEP_NAME := ''Load TMP_INST_CLAIM_CLMNBR''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());


   
CREATE OR REPLACE TEMPORARY TABLE  IDENTIFIER(:V_TMP_INST_CLAIM_CLMNBR) AS
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
PATIENT_REASON_FOR_VISIT_CD,
EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
OTHER_DIAGNOSIS_CD_INFO,
OTHER_PROCEDURE_INFO,
OCCURRENCE_SPAN_INFO,
OCCURRENCE_INFO,
VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,
DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
    IDENTIFIER(:V_INST_CLAIM_PART) CLM
    JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
        DB2.CLH_TRK_ID = CLM.NETWORK_TRACE_NUMBER
        AND DATE_PART(
            YEAR,
            COALESCE(
                TRY_TO_DATE(DB2.CLM_RECEPT_DT),
                DATE(''1970-01-01'')
            )
        ) = DATE_PART(YEAR,TRY_TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD''))
        AND CLM.APP_SENDER_CODE = ''APTIX''
    )
WHERE
    DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
            AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
PATIENT_REASON_FOR_VISIT_CD,
EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
OTHER_DIAGNOSIS_CD_INFO,
OTHER_PROCEDURE_INFO,
OCCURRENCE_SPAN_INFO,
OCCURRENCE_INFO,
VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,
DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
	IDENTIFIER(:V_INST_CLAIM_PART) CLM
	JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
		LPAD(SUBSTR(DB2.CLM_NUM, 1, 11), 11, ''0'') = TRIM(SUBSTR(CLM.CLM_BILLING_NOTE_TEXT, 2, 12))
		AND (CLM.APP_SENDER_CODE = ''EXELA'')
		AND (
			DB2.DOC_CTL_NBR IS NULL
			OR DB2.DOC_CTL_NBR ILIKE ''NULL''
		)
	)
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
			AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
--NEW SELECT QUERY ADDED FOR EXELA CLAIMS
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
PATIENT_REASON_FOR_VISIT_CD,
EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
OTHER_DIAGNOSIS_CD_INFO,
OTHER_PROCEDURE_INFO,
OCCURRENCE_SPAN_INFO,
OCCURRENCE_INFO,
VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
IDENTIFIER(:V_INST_CLAIM_PART) CLM
JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
	DB2.DOC_CTL_NBR = TRIM(
		SUBSTR(SPLIT(CLM.CLM_BILLING_NOTE_TEXT, '' '') [1], 3, 12)
	)
	AND (CLM.APP_SENDER_CODE = ''EXELA'')
	AND (
		DB2.DOC_CTL_NBR NOT iLIKE ''NULL''
		AND DB2.DOC_CTL_NBR IS NOT NULL
	)
)
WHERE
DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
		AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE;
					
					V_ROWS_LOADED := SQLROWCOUNT;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);


V_STEP := ''STEP2'';
 
 
V_STEP_NAME := ''Load TMP_INST_CLAIM_CLMNBR_REPORT''; 
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());


   
CREATE OR REPLACE TEMPORARY TABLE  IDENTIFIER(:V_TMP_INST_CLAIM_CLMNBR_REPORT) AS
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
ARRAY_TO_STRING(PATIENT_REASON_FOR_VISIT_CD,'''') as PATIENT_REASON_FOR_VISIT_CD,
ARRAY_TO_STRING(EXTERNAL_CAUSE_OF_INJURY,'''') as EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
ARRAY_TO_STRING(OTHER_DIAGNOSIS_CD_INFO,'''') as OTHER_DIAGNOSIS_CD_INFO,
ARRAY_TO_STRING(OTHER_PROCEDURE_INFO,'''') as OTHER_PROCEDURE_INFO,
ARRAY_TO_STRING(OCCURRENCE_SPAN_INFO,'''') as OCCURRENCE_SPAN_INFO,
ARRAY_TO_STRING(OCCURRENCE_INFO,'''') as OCCURRENCE_INFO,
ARRAY_TO_STRING(VALUE_INFO,'''') as VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,
DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
    IDENTIFIER(:V_INST_CLAIM_PART) CLM
    JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
        DB2.CLH_TRK_ID = CLM.NETWORK_TRACE_NUMBER
        AND DATE_PART(
            YEAR,
            COALESCE(
                TRY_TO_DATE(DB2.CLM_RECEPT_DT),
                DATE(''1970-01-01'')
            )
        ) = DATE_PART(YEAR,TRY_TO_DATE(CLM.TRANSACTSET_CREATE_DATE,''YYYYMMDD''))
        AND CLM.APP_SENDER_CODE = ''APTIX''
    )
WHERE
    DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
            AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
ARRAY_TO_STRING(PATIENT_REASON_FOR_VISIT_CD,'''') as PATIENT_REASON_FOR_VISIT_CD,
ARRAY_TO_STRING(EXTERNAL_CAUSE_OF_INJURY,'''') as EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
ARRAY_TO_STRING(OTHER_DIAGNOSIS_CD_INFO,'''') as OTHER_DIAGNOSIS_CD_INFO,
ARRAY_TO_STRING(OTHER_PROCEDURE_INFO,'''') as OTHER_PROCEDURE_INFO,
ARRAY_TO_STRING(OCCURRENCE_SPAN_INFO,'''') as OCCURRENCE_SPAN_INFO,
ARRAY_TO_STRING(OCCURRENCE_INFO,'''') as OCCURRENCE_INFO,
ARRAY_TO_STRING(VALUE_INFO,'''') as VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,
DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
	IDENTIFIER(:V_INST_CLAIM_PART) CLM
	JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
		LPAD(SUBSTR(DB2.CLM_NUM, 1, 11), 11, ''0'') = TRIM(SUBSTR(CLM.CLM_BILLING_NOTE_TEXT, 2, 12))
		AND (CLM.APP_SENDER_CODE = ''EXELA'')
		AND (
			DB2.DOC_CTL_NBR IS NULL
			OR DB2.DOC_CTL_NBR ILIKE ''NULL''
		)
	)
WHERE
	DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
			AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE
UNION
--NEW SELECT QUERY ADDED FOR EXELA CLAIMS
SELECT
DISTINCT DB2.CLM_NUM AS UCPS_CLM_NUM,
DB2.CLM_RECEPT_DT AS UCPS_CLM_DT,
DB2.CLM_TYPE,
''D9'' AS REF_ID_QLFR,
DB2.CLH_TRK_ID AS REF_ID_VALUE,
DB2.MEMBER_ID,
'''' AS CREAT_DT,
CLM.APP_SENDER_CODE,
CLM.APP_RECIEVER_CODE,
CLM.GRP_CONTROL_NO,
CLM.TRANCACTSET_CNTL_NO,
CLM.IMPL_CONVENTION_REFER,
CLM.TRANSACTSET_PURPOSE_CODE,
CLM.BATCH_CNTL_NO,
CLM.TRANSACTSET_CREATE_TIME,
CLM.TRANSACT_TYPE_CODE,
CLM.CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
ARRAY_TO_STRING(HC_CONDITION_CODES,'''') as HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
ARRAY_TO_STRING(PATIENT_REASON_FOR_VISIT_CD,'''') as PATIENT_REASON_FOR_VISIT_CD,
ARRAY_TO_STRING(EXTERNAL_CAUSE_OF_INJURY,'''') as EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
ARRAY_TO_STRING(OTHER_DIAGNOSIS_CD_INFO,'''') as OTHER_DIAGNOSIS_CD_INFO,
ARRAY_TO_STRING(OTHER_PROCEDURE_INFO,'''') as OTHER_PROCEDURE_INFO,
ARRAY_TO_STRING(OCCURRENCE_SPAN_INFO,'''') as OCCURRENCE_SPAN_INFO,
ARRAY_TO_STRING(OCCURRENCE_INFO,'''') as OCCURRENCE_INFO,
ARRAY_TO_STRING(VALUE_INFO,'''') as VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,DRUG_MEASURE_UNIT,
CLM.TRANSACTSET_CREATE_DATE
FROM
IDENTIFIER(:V_INST_CLAIM_PART) CLM
JOIN IDENTIFIER(:V_CH_VIEW) DB2 ON (
	DB2.DOC_CTL_NBR = TRIM(
		SUBSTR(SPLIT(CLM.CLM_BILLING_NOTE_TEXT, '' '') [1], 3, 12)
	)
	AND (CLM.APP_SENDER_CODE = ''EXELA'')
	AND (
		DB2.DOC_CTL_NBR NOT iLIKE ''NULL''
		AND DB2.DOC_CTL_NBR IS NOT NULL
	)
)
WHERE
DB2.CLM_RECEPT_DT = :V_CLM_RECEPT_DATE
		AND CLM.TRANSACTSET_CREATE_DATE BETWEEN :V_TRANSACTSET_START_DATE
                    AND :V_TRANSACTSET_END_DATE;
                                                                                    
 INSERT INTO IDENTIFIER(:V_INST_CLAIM_CLMNBR)
(
  UCPS_CLM_NUM , 
  UCPS_CLM_DT , 
  CLM_TYPE , 
  REF_ID_QLFR , 
  REF_ID_VALUE,
  MEMBER_ID , 
  CREAT_DT , 
  APP_SENDER_CODE , 
  APP_RECIEVER_CODE , 
  GRP_CONTROL_NO , 
  TRANCACTSET_CNTL_NO , 
  IMPL_CONVENTION_REFER , 
  TRANSACTSET_PURPOSE_CODE , 
  BATCH_CNTL_NO , 
  TRANSACTSET_CREATE_TIME , 
  TRANSACT_TYPE_CODE , 
  CLAIM_ID , 
  TOTAL_CLAIM_CHARGE_AMT , 
  HEALTHCARESERVICE_LOCATION , 
  PROVIDER_ACCEPT_ASSIGN_CODE , 
  PROVIDER_BENEFIT_AUTH_CODE , 
  PROVIDER_PATINFO_RELEASE_AUTH_CODE , 
  DATE_TIME_QLFY , 
  DATE_TIME_FRMT_QLFY , 
  STATEMENT_DATE , 
  ADMIT_TYPE_CODE , 
  ADMIT_SOURCE_CODE , 
  PATIENT_STATUS_CODE , 
  HEALTH_CARE_CODE_INFO , 
  SV_REIMBURSEMENT_RATE , 
  SV_HCPCS_PAYABLE_AMT , 
  SV_CLM_PAYMENT_REMARK_CODE , 
  SL_SEQ_NUM , 
  PRODUCT_SERVICE_ID , 
  PRODUCT_SERVICE_ID_QLFR , 
  LINE_ITEM_CHARGE_AMT , 
  MEASUREMENT_UNIT , 
  SERVICE_UNIT_COUNT , 
  CAS_ADJ_GROUP_CODE , 
  CAS_ADJ_REASON_CODE , 
  CAS_ADJ_AMT , 
  DELAY_REASON_CODE , 
  LINE_ITEM_DENIED_CHARGE_AMT , 
  NETWORK_TRACE_NUMBER , 
  PRINCIPAL_PROCEDURE_INFO , 
  HC_CONDITION_CODES , 
  CLM_LAB_FACILITY_NAME , 
  CLM_LAB_FACILITY_ID , 
  CLM_LAB_FACILITY_ADDR1 , 
  CLM_LAB_FACILITY_ADDR2 , 
  CLM_LAB_FACILITY_CITY , 
  CLM_LAB_FACILITY_STATE , 
  CLM_LAB_FACILITY_ZIP , 
  CLM_LAB_FACILITY_REF_ID_QLFR , 
  CLM_LAB_FACILITY_REF_ID , 
  MEDICAL_RECORD_NUMBER , 
  CLM_NOTE_TEXT , 
  CLM_BILLING_NOTE_TEXT , 
  CLM_ADMITTING_DIAGNOSIS_CD , 
  PATIENT_REASON_FOR_VISIT_CD , 
  EXTERNAL_CAUSE_OF_INJURY,  
  DIAGNOSIS_RELATED_GRP_INFO , 
  OTHER_DIAGNOSIS_CD_INFO , 
  OTHER_PROCEDURE_INFO , 
  OCCURRENCE_SPAN_INFO , 
  OCCURRENCE_INFO , 
  VALUE_INFO , 
  TREATMENT_CD_INFO , 
  OTHER_PAYER_1_PAID_AMT , 
  OTHER_PAYER_2_PAID_AMT , 
  DRUG_PRODUCT_ID_QLFR , 
  DRUG_PRODUCT_ID , 
  DRUG_UNIT_COUNT , 
  DRUG_MEASURE_UNIT ,
  TRANSACTSET_CREATE_DATE
	)                                                                                   
SELECT
DISTINCT UCPS_CLM_NUM,
UCPS_CLM_DT,
CLM_TYPE,
REF_ID_QLFR,
REF_ID_VALUE,
MEMBER_ID,
CREAT_DT,
APP_SENDER_CODE,
APP_RECIEVER_CODE,
GRP_CONTROL_NO,
TRANCACTSET_CNTL_NO,
IMPL_CONVENTION_REFER,
TRANSACTSET_PURPOSE_CODE,
BATCH_CNTL_NO,
TRANSACTSET_CREATE_TIME,
TRANSACT_TYPE_CODE,
CLAIM_ID,
TOTAL_CLAIM_CHARGE_AMT,
HEALTHCARESERVICE_LOCATION,
PROVIDER_ACCEPT_ASSIGN_CODE,
PROVIDER_BENEFIT_AUTH_CODE,
PROVIDER_PATINFO_RELEASE_AUTH_CODE,
DATE_TIME_QLFY,
DATE_TIME_FRMT_QLFY,
STATEMENT_DATE,
ADMIT_TYPE_CODE,
ADMIT_SOURCE_CODE,
PATIENT_STATUS_CODE,
HEALTH_CARE_CODE_INFO,
SV_REIMBURSEMENT_RATE,
SV_HCPCS_PAYABLE_AMT,
SV_CLM_PAYMENT_REMARK_CODE,
SL_SEQ_NUM,
PRODUCT_SERVICE_ID,
PRODUCT_SERVICE_ID_QLFR,
LINE_ITEM_CHARGE_AMT,
MEASUREMENT_UNIT,
SERVICE_UNIT_COUNT,
CAS_ADJ_GROUP_CODE,
CAS_ADJ_REASON_CODE,
CAS_ADJ_AMT,
DELAY_REASON_CODE,
LINE_ITEM_DENIED_CHARGE_AMT,
NETWORK_TRACE_NUMBER,
PRINCIPAL_PROCEDURE_INFO,
HC_CONDITION_CODES,
CLM_LAB_FACILITY_NAME,
CLM_LAB_FACILITY_ID,
CLM_LAB_FACILITY_ADDR1,
CLM_LAB_FACILITY_ADDR2,
CLM_LAB_FACILITY_CITY,
CLM_LAB_FACILITY_STATE,
CLM_LAB_FACILITY_ZIP,
CLM_LAB_FACILITY_REF_ID_QLFR,
CLM_LAB_FACILITY_REF_ID,
MEDICAL_RECORD_NUMBER,
CLM_NOTE_TEXT,
CLM_BILLING_NOTE_TEXT,
CLM_ADMITTING_DIAGNOSIS_CD,
PATIENT_REASON_FOR_VISIT_CD,
EXTERNAL_CAUSE_OF_INJURY,
DIAGNOSIS_RELATED_GRP_INFO,
OTHER_DIAGNOSIS_CD_INFO,
OTHER_PROCEDURE_INFO,
OCCURRENCE_SPAN_INFO,
OCCURRENCE_INFO,
VALUE_INFO,
TREATMENT_CD_INFO,
OTHER_PAYER_1_PAID_AMT,
OTHER_PAYER_2_PAID_AMT,
DRUG_PRODUCT_ID_QLFR,
DRUG_PRODUCT_ID,
DRUG_UNIT_COUNT,
DRUG_MEASURE_UNIT,
TRANSACTSET_CREATE_DATE
FROM
	IDENTIFIER(:V_TMP_INST_CLAIM_CLMNBR)
WHERE
	CLM_TYPE = ''I'';
  
V_ROWS_LOADED := SQLROWCOUNT;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);

  
V_STEP := ''STEP3'';

 
V_STEP_NAME := ''Generate File for Wrong clmtype''; 

V_MESSAGE   :=  ''File Generated Successfully'';
   
V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());                                 

V_STAGE_QUERY := ''COPY INTO ''||:STAGE_NAME||''/pre_clm/outbox/837_claim_number_provisioning/''||''inst_p_clmtype_''||(select TO_VARCHAR(:V_CURRENT_DATE,''YYYYMMDD''))||''.txt''||'' FROM (
SELECT DISTINCT *
FROM TMP_INST_CLAIM_CLMNBR_REPORT WHERE CLM_TYPE IN (''''P'''','''' '''')
               )
file_format = (type = ''''CSV'''' 
               field_delimiter = ''''~''''
	          empty_field_as_null=false
			  NULL_IF = ('''''''',''''NULL'''', ''''Null'''',''''null'''')
              compression = None
 )
               
               
               
HEADER = False
OVERWRITE = True
MAX_FILE_SIZE = 4900000000
SINGLE = True''

;                                 

execute immediate ''USE SCHEMA ''||:TGT_SC;                          
execute immediate :V_STAGE_QUERY;  


V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   
  
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, NULL, NULL, :V_MESSAGE, NULL, NULL);                                      
                                 

EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';