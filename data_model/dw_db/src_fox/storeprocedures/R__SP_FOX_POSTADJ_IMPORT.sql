USE SCHEMA SRC_FOX;

CREATE OR REPLACE PROCEDURE "SP_FOX_POSTADJ_IMPORT"("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "LZ_FOX_SC" VARCHAR(16777216), "WH" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE


V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROGRAM_LIST  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.PROGRAM_LIST'';

V_PROCESS_NAME     VARCHAR := ''FOX_POSTADJ_IMPORT''; 

V_SUB_PROCESS_NAME VARCHAR DEFAULT ''FOX_POSTADJ_IMPORT'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_MESSAGE          VARCHAR;

V_LAST_QUERY_ID    VARCHAR;

V_FOX_POSTADJ_IMPORT_STG   VARCHAR := :DB_NAME||''.''||COALESCE(:LZ_FOX_SC, ''LZ_FOX'')||''.FOX_POSTADJ_IMPORT_STG'';

V_FOX_POSTADJ_IMPORT VARCHAR := :DB_NAME||''.''||COALESCE(:TGT_SC, ''SRC_FOX'')||''.FOX_POSTADJ_IMPORT'';



BEGIN

ALTER SESSION SET TIMEZONE = ''America/Chicago'';

   V_STEP := ''STEP1'';
   
   V_STEP_NAME := ''LOAD FOX_POSTADJ_IMPORT'';
   
   V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;
   
   V_ROWS_PARSED  := (SELECT COUNT(1) FROM IDENTIFIER(:V_FOX_POSTADJ_IMPORT_STG) );

INSERT INTO IDENTIFIER(:V_FOX_POSTADJ_IMPORT)
(
  CLM_NUM , 
  CLMSOURCE , 
  ECSOURCE , 
  CLM_SRC_CD , 
  CLAIMSUSPENSEREASON , 
  CLAIMSUSPENSEREASONDATE , 
  ECSUSPENSEREASON , 
  SRV_FROM_DT , 
  SRV_TO_DT , 
  BIL_LN_NUM , 
  CHRG_AMT , 
  MCARE_PD_AMT , 
  MCARE_APRVD_AMT , 
  PARTB_DED_AMT , 
  BEN_AMT , 
  CPT_CD , 
  TIN , 
  NAT_PROV_ID , 
  OPER_ID , 
  MEDCR_CLM_CTL_NBR , 
  CLH_TRK_ID , 
  ACCT_NBR , 
  ORIG_MBR_NBR , 
  AARP_DED_AMT , 
  AARP_COPAY_AMT , 
  CLM_NOTE_DAT , 
  PLN_CD , 
  COMPAS_PLN_CD , 
  PLN_IND , 
  PLAN , 
  OOP_AMT , 
  PLSRV_CD , 
  SRV_CD , 
  TYP_CD , 
  TOS_CD , 
  REND_PRV_NPI , 
  ASSGN_ADJ_AMT , 
  CLM_TOT_APP_AMT_R_D , 
  CLM_TOT_DED_R_D , 
  CLM_TOT_AMT_PD_R_D , 
  CLM_TOT_COINSUR_AMT_R_D , 
  PAT_PARA_NUM , 
  DOC_CTL_NBR ,
  DT_CMPLTD,
  DT_CMPLTD_FULL
)   
  SELECT   
  CLM_NUM , 
  CLMSOURCE , 
  ECSOURCE , 
  CLM_SRC_CD , 
  CLAIMSUSPENSEREASON , 
  CLAIMSUSPENSEREASONDATE , 
  ECSUSPENSEREASON , 
  SRV_FROM_DT , 
  SRV_TO_DT , 
  BIL_LN_NUM , 
  CHRG_AMT , 
  MCARE_PD_AMT , 
  MCARE_APRVD_AMT , 
  PARTB_DED_AMT , 
  BEN_AMT , 
  CPT_CD , 
  TIN , 
  NAT_PROV_ID , 
  OPER_ID , 
  MEDCR_CLM_CTL_NBR , 
  CLH_TRK_ID , 
  ACCT_NBR , 
  ORIG_MBR_NBR , 
  AARP_DED_AMT , 
  AARP_COPAY_AMT , 
  CLM_NOTE_DAT , 
  PLN_CD , 
  COMPAS_PLN_CD , 
  PLN_IND , 
  PLAN , 
  OOP_AMT , 
  PLSRV_CD , 
  SRV_CD , 
  TYP_CD , 
  TOS_CD , 
  REND_PRV_NPI , 
  ASSGN_ADJ_AMT , 
  CLM_TOT_APP_AMT_R_D , 
  CLM_TOT_DED_R_D , 
  CLM_TOT_AMT_PD_R_D , 
  CLM_TOT_COINSUR_AMT_R_D , 
  PAT_PARA_NUM , 
  DOC_CTL_NBR ,
  DT_CMPLTD,
  DT_CMPLTD_FULL
  
  FROM IDENTIFIER(:V_FOX_POSTADJ_IMPORT_STG)
;


V_ROWS_LOADED := SQLROWCOUNT ;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   

   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);




EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'', :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';