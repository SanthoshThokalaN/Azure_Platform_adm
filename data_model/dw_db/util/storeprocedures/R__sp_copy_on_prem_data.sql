USE SCHEMA UTIL;

CREATE OR REPLACE PROCEDURE "SP_COPY_ON_PREM_DATA"("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "APP_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "TGT_TBL" VARCHAR(16777216), "SOURCE_DIR" VARCHAR(16777216), "STAGE_NAME" VARCHAR(16777216), "FILE_FORMAT" VARCHAR(16777216), "WH" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

V_QUERY VARCHAR;
V_ROWS_PARSED INTEGER DEFAULT 0;
V_ROWS_LOADED INTEGER DEFAULT 0;
V_MESSAGE VARCHAR DEFAULT ''Copy executed with 0 files processed.'';
V_LAST_QUERY_ID VARCHAR;
V_LAST_QUERY_ID_CNT INTEGER;
V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';
V_PROCESS_NAME     VARCHAR := SUBSTR(:PIPELINE_NAME,4);
V_SUB_PROCESS_NAME     VARCHAR := :TGT_TBL;
V_STEP             VARCHAR;
V_STEP_NAME        VARCHAR;
V_START_TIME       VARCHAR;
V_END_TIME         VARCHAR;

BEGIN

ALTER SESSION SET TIMEZONE = ''America/Chicago'';

V_STEP := ''STEP1'';
   
V_STEP_NAME := ''COPY'';

V_QUERY := ''COPY INTO ''||:TGT_SC||''.''||:TGT_TBL||'' FROM ''||:STAGE_NAME||''/on_prem_extracts/''||lower(:SOURCE_DIR)||''/''||lower(:TGT_TBL)||''/ pattern=".*''||lower(:TGT_TBL)||''_.*.txt.gz" FILE_FORMAT = ''||:FILE_FORMAT||'' ON_ERROR = CONTINUE'';

V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH; 

EXECUTE IMMEDIATE V_QUERY;


V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID()) ;

V_LAST_QUERY_ID_CNT := (SELECT count(*) FROM TABLE ( RESULT_SCAN (:V_LAST_QUERY_ID)) WHERE $1 != ''Copy executed with 0 files processed.'');


                  IF (V_LAST_QUERY_ID_CNT != 0)
                  THEN 
                  V_ROWS_PARSED := (SELECT sum($3) FROM TABLE ( RESULT_SCAN (:V_LAST_QUERY_ID)));
                  V_ROWS_LOADED := (SELECT sum($4) FROM TABLE ( RESULT_SCAN (:V_LAST_QUERY_ID)));
                  V_MESSAGE := null;
                  END IF;
        


V_END_TIME := CURRENT_TIMESTAMP();

   CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, :APP_NAME, :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, :V_MESSAGE, NULL, NULL);


   EXCEPTION

   WHEN OTHER THEN

   CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, :APP_NAME, :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


   RAISE;

   END;

';