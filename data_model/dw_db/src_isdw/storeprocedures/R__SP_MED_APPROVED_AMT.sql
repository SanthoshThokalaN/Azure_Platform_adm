USE SCHEMA SRC_ISDW;

CREATE OR REPLACE PROCEDURE "SP_MED_APPROVED_AMT"("PIPELINE_ID" VARCHAR(16777216), "PIPELINE_NAME" VARCHAR(16777216), "DB_NAME" VARCHAR(16777216), "UTIL_SC" VARCHAR(16777216), "TGT_SC" VARCHAR(16777216), "LZ_ISDW_SC" VARCHAR(16777216), "WH" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS CALLER
AS '
DECLARE

V_SP_PROCESS_RUN_LOGS_DTL  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.SP_PROCESS_RUN_LOGS_DTL'';

V_PROGRAM_LIST  VARCHAR := :DB_NAME||''.''||COALESCE(:UTIL_SC, ''UTIL'')||''.PROGRAM_LIST'';

V_PROCESS_NAME     VARCHAR := ''FWA_TAXONOMY_MISMATCH_LOAD''; 

V_SUB_PROCESS_NAME VARCHAR DEFAULT ''MED_APPROVED_AMT_LOAD'';

V_STEP             VARCHAR;

V_STEP_NAME        VARCHAR;

V_START_TIME       VARCHAR;

V_END_TIME         VARCHAR;

V_ROWS_PARSED       INTEGER;

V_ROWS_LOADED       INTEGER;

V_MESSAGE          VARCHAR;

V_LAST_QUERY_ID    VARCHAR;

V_MED_APPROVED_AMT_STG   VARCHAR := :DB_NAME||''.''||COALESCE(:LZ_ISDW_SC, ''LZ_ISDW'')||''.MED_APPROVED_AMT_STG'';

V_MED_APPROVED_AMT VARCHAR := :DB_NAME||''.''||COALESCE(:TGT_SC, ''SRC_ISDW'')||''.MED_APPROVED_AMT'';



BEGIN

ALTER SESSION SET TIMEZONE = ''America/Chicago'';

   V_STEP := ''STEP1'';
   
   V_STEP_NAME := ''LOAD MED_APPROVED_AMT'';
   
   V_START_TIME := CONVERT_TIMEZONE(''America/Chicago'', CURRENT_TIMESTAMP());

EXECUTE IMMEDIATE ''USE WAREHOUSE ''||:WH;
   
   V_ROWS_PARSED  := (SELECT COUNT(1) FROM IDENTIFIER(:V_MED_APPROVED_AMT_STG) );

INSERT INTO IDENTIFIER(:V_MED_APPROVED_AMT)
(
CLAIM_NUMBER            ,
BILL_LINE_NUMBER        ,
MEDICARE_APPROVED_AMOUNT,
ETL_LST_BTCH_ID         ,
CLAIM_PD_DATE           ,
ADJ_BEN_AMT             

)   
     
SELECT 
CLAIM_NUMBER            ,
BILL_LINE_NUMBER        ,
MEDICARE_APPROVED_AMOUNT,
ETL_LST_BTCH_ID         ,
CLAIM_PD_DATE           ,
ADJ_BEN_AMT             FROM IDENTIFIER(:V_MED_APPROVED_AMT_STG)
;



V_ROWS_LOADED := SQLROWCOUNT ;

V_LAST_QUERY_ID := (SELECT LAST_QUERY_ID(-1)) ;
   

   
CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'' , :PIPELINE_ID, :PIPELINE_NAME, :V_PROCESS_NAME, :V_SUB_PROCESS_NAME, 
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''SUCCESS'', :V_LAST_QUERY_ID, :V_ROWS_PARSED, :V_ROWS_LOADED, NULL, NULL, NULL);




EXCEPTION

WHEN OTHER THEN

CALL IDENTIFIER(:V_SP_PROCESS_RUN_LOGS_DTL) (:DB_NAME, :UTIL_SC, ''PRE_CLM'' , :PIPELINE_ID, :PIPELINE_NAME,  :V_PROCESS_NAME, :V_SUB_PROCESS_NAME,
                                 :V_STEP, :V_STEP_NAME, :V_START_TIME, CURRENT_TIMESTAMP(), ''FAILED'', :V_LAST_QUERY_ID, NULL, NULL, :SQLERRM, :SQLCODE, :SQLSTATE);


RAISE;

END;

';
